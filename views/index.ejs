<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Student List</title>
  <link href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet">
  <link href="https://fonts.googleapis.com/css2?family=Kanit:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&display=swap" rel="stylesheet">
</head>
<body>
    <style>
        * {
            font-family: 'Kanit';
        }
    </style>
  <div class="container">
    <h1 class="my-4">รายชื่อสามาชิกคณะสี</h1>
    <button class="btn btn-primary my-4" data-toggle="modal" data-target="#addStudentModal">Add Student</button>
    <a href="/history" class="btn btn-secondary my-4">View History</a>
    <table class="table table-bordered">
      <thead>
        <tr>
          <th>ลำดับ</th>
          <th>ชื่อ</th>
          <th>ห้อง</th>
          <th>เลขที่</th>
          <th>บทบาท</th>
          <th>เช็คชื่อ</th>
        </tr>
      </thead>
      <tbody id="student-list">
      </tbody>
    </table>
  </div>

  <div class="modal fade" id="addStudentModal" tabindex="-1" role="dialog" aria-labelledby="addStudentModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title" id="addStudentModalLabel">เพิ่มนักเรียนในระบบ</h5>
          <button type="button" class="close" data-dismiss="modal" aria-label="Close">
            <span aria-hidden="true">&times;</span>
          </button>
        </div>
        <div class="modal-body">
          <form id="add-student-form">
            <div class="form-group">
              <label for="student-name">ชื่อ-นามสกุล</label>
              <input type="text" class="form-control" id="student-name" required>
            </div>
            <div class="form-group">
              <label for="student-class">ห้องประจำชั้น</label>
              <input type="text" class="form-control" id="student-class" required>
            </div>
            <div class="form-group">
              <label for="student-number">เลขที่</label>
              <input type="number" class="form-control" id="student-number" required>
            </div>
            <div class="form-group">
              <label for="student-role">บทบาท</label>
              <input type="text" class="form-control" id="student-role" required>
            </div>
            <button type="submit" class="btn btn-primary">เพิ่มนักเรียนในระบบ</button>
          </form>
        </div>
      </div>
    </div>
  </div>

  <script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.5.4/dist/umd/popper.min.js"></script>
  <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
  <script>
    async function fetchStudentData() {
      const response = await fetch('/api/students');
      const students = await response.json();
      const studentList = document.getElementById('student-list');

      studentList.innerHTML = '';
      students.forEach(student => {
        const row = document.createElement('tr');
        row.innerHTML = `
          <td>${student.id}</td>
          <td>${student.name}</td>
          <td>${student.class}</td>
          <td>${student.number}</td>
          <td>${student.role}</td>
          <td>
            <button class="btn btn-success" onclick="handleCheckIn('${student.name}', 'มา')">มา</button>
            <button class="btn btn-danger" onclick="handleCheckIn('${student.name}', 'ไม่มา')">ไม่มา</button>
          </td>
        `;
        studentList.appendChild(row);
      });
    }

    async function handleCheckIn(name, type) {
      const isConfirmed = confirm(`แน่ใจนะว่าต้องการกดยืนยัน ${name} ว่า ${type}?`);
      if (isConfirmed) {
        await fetch('/api/checkin', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify({ name, type })
        });
        alert(`เช็คชื่อ ${name} ว่า ${type} สำเร็จ`);
        fetchStudentData();  // Refresh the student list
      }
    }

    document.getElementById('add-student-form').addEventListener('submit', async function (event) {
      event.preventDefault();
      const name = document.getElementById('student-name').value;
      const classType = document.getElementById('student-class').value;
      const number = document.getElementById('student-number').value;
      const role = document.getElementById('student-role').value;

      await fetch('/api/students', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify({ name, class: classType, number, role })
      });

      $('#addStudentModal').modal('hide');
      document.getElementById('add-student-form').reset();
      fetchStudentData();
    });

    window.onload = fetchStudentData;
  </script>
</body>
</html>
